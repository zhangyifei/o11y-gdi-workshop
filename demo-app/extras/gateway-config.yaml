# Configuration file that uses the Splunk exporters (SAPM, SignalFx) to push
# data to Splunk products.

receivers:
  otlp:
    protocols:
      grpc:
  # This section is used to collect the OpenTelemetry Collector metrics
  # Even if just a Splunk APM customer, these metrics are included
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']
        metric_relabel_configs:
          - source_labels: [ __name__ ]
            regex: '.*grpc_io.*'
            action: drop

processors:
  batch:
  # Enabling the memory_limiter is strongly recommended for every pipeline.
  # Configuration is based on the amount of memory allocated to the collector.
  # In general, the ballast should be set to 1/3 of the collector's memory, the limit
  # should be 90% of the collector's memory up to 2GB. The simplest way to specify the
  # ballast size is set the value of SPLUNK_BALLAST_SIZE_MIB env variable. Alternatively, the
  # --mem-ballast-size-mib command line flag can be passed and take priority.
  # For more information about memory limiter, see
  # https://github.com/open-telemetry/opentelemetry-collector/blob/master/processor/memorylimiter/README.md
  memory_limiter:
    check_interval: 2s
    limit_mib: 190

  # Optional: The following processor can be used to add a default "deployment.environment" attribute to the traces
  # when it's not populated by instrumentation libraries.
  # If enabled, make sure to enable this processor in the pipeline below.
  resource/add_environment:
    attributes:
      - action: insert
        value: workshop-401testing
        key: deployment.environment

exporters:
  # Traces
  sapm:
    access_token: "pMIUgbzKE8sqIrT2cdq_8g"
    endpoint: "https://ingest.us0.signalfx.com/v2/trace"
  # Metrics + Events
  signalfx:
    access_token: "pMIUgbzKE8sqIrT2cdq_8g"
    realm: "us0"
    # no need to translate/exclude metrics when using as a gateway
    # metrics should be translated at agent
    translation_rules: []
    exclude_metrics: []
  # Debug
  #logging:
    #loglevel: debug

extensions:
  health_check:
  http_forwarder:
    egress:
      endpoint: "https://api.us0.signalfx.com"
  zpages:
    endpoint: 0.0.0.0:55689

service:
  extensions: [health_check, http_forwarder, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors:
      - memory_limiter
      - batch
      - resource/add_environment
      exporters: [sapm, signalfx]
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch]
      exporters: [signalfx]
